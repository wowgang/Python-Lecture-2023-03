# 파일열기 

myFile = open("python.txt" ,"w") #w읽기모드 존재하지않으면 파일이 생성됨 

  

#파일을 열고,쓰고,닫기 

myFile = open("python.txt" ,"w") 

myFile.write("Programming!") 

myFile.close() 

  

# 2줄의 내용을 가진 파일을 열고,쓰고,닫기 

myFile = open("python.txt" ,"w") 

myFile.write("Programming! \nHello") 

myFile.close() 

  

  

# 만들어진 python.txt 파일을 읽기 모드로 열기 

read_file = open("python.txt", "r") 

# print(read_file) #이렇게 하면 파일의 속성을 알려줌 

  

text = read_file.readline() 

text1 = read_file.readline() 

print(text,text1) #파일열림 한줄씩 불러옴 

#Programming! 

#Hello 

  

# 파일의 모든 줄을 읽어서 각각의 줄을 리스트로 반환 

read_file = open("python.txt", "r") 

all_text = read_file.readlines() 

print(all_text) # ['Programming! \n', 'Hello'] 

  

#줄 바꿈(\n) 문자 제거 

read_file = open("python.txt", "r") 

test_strip = read_file.readline().strip() 

print(test_strip) 

''' 

  

''' 

#예제1 

name = input("Enter Your name : ") 

grade = input("Enter Your grade : ") 

company = input("Enter Your Company name : ") 

  

print(name, grade, company) 

print('이름 : {0}, 등급 : {1}, 소속 :{2}'.format(name, grade, company)) 

''' 

''' 

# 예제2 

number = input("Enter number :") 

num1 = int(number) 

name = input("Enter name :") 

print("type of number", type(number), number *3) 

print("type of number", type(num1), num1 *3) 

''' 

''' 

# 예제3 

first_num = int(input("Enter number1 : ")) 

second_num = int(input("Enter number2 : ")) 

  

total = first_num + second_num 

print("first_num + second_num = ", total) 

''' 

  

''' 

# 예제4 

float_num = input("Enter a float number : ") 

print("input : float : ", float_num) 

print("input type : ", type(float_num)) 

float_num = float(input("Enter a float number : ")) 

print("input : float : ", float_num) 

print("input type : ", type(float_num)) 

# >>> c:\python_basic>python Chapter06.py 

# Enter a float number : 3.141592 

# input : float :  3.141592 

# input type :  <class 'str'> 

# Enter a float number : 3.141592 

# input : float :  3.141592 

# input type :  <class 'float'> 

''' 

print('FirstName : {0}, LastName : {1}'.format(input("First Name :"),input("Last Name :"))) 

print('first_num : {0}, second_num : {1}'.format(input(input(),input())) 

 

 

''' 

#파일 읽기 및 쓰기 

읽기 모드 : r, 쓰기모드 : w, 추가 모드 : a, 텍스트 모드 : t, 바이너리 모드(일반적인모드 0과1) : b 

바이너리로 저장하면 용량이 적어져있음 

상대 경로(../, ./) ,절대 경로(C:\python_basic\python.txt) 

../현재위치의 상위 디렉토리 (한칸) 

./현재위치 

../../ 두칸 

상대경로는 절대경로처럼 다 쓰지않고 ./으로 표현 

''' 

#파일 읽기(Read) 

f = open('./resource/it_news.txt', 'r', encoding='UTF-8') 

# 인코딩 확인 

print(f.encoding) 

# 파일 이름 

print(f.name) 

# 모드 확인 

print(f.mode) 

print(f) #파일 속 내용이 보이는게 아니라 파일의 속성 

cts = f.read() #파일속내용 출력 read()매서드사용 

print(cts) 

f.close() #닫아주지 않으면 메모리에 남아서 부화가 걸릴수있음 

  

# with ~ as(alias별칭) 

''' 

open() 열면 객체가 pc 메모리를 계속 점유하고 있다. 

그래서 반드시 close()해야 한다. 

with ~ as 을 사용하면 개발자가 실수로 close()를 하지 않아도 

with ~as 구문이 자동으로 객체를 close를 해준다. 

''' 

#인덴트 들여쓰기 자동으로4칸 

with open('./resource/it_news.txt', 'r', encoding='UTF-8') as f: #(이파일의 별칭을 f라고 한다.) 

    c = f.read() 

    print(c) 

    print(list(c)) 

    print(iter(c)) #<str_iterator object at 0x000001BC0914ABF0> itertator object는 반복문(for,while문) 사용 여부 확인 가능 

  

print() 

  

# read() : 전체 읽기, read(10) : 10byte 

with open('./resource/it_news.txt', 'r', encoding='UTF-8') as f: #(이파일의 별칭을 f라고 한다.) 

    # c = f.read() #파일전체를 불러와라 

    # print(c) 

    c = f.read(20)   #20바이트 Right now gamers can 공백도 바이트에 포함 영어1단어가 1바이트 한글은2바이트 

    print(c) 

    c = f.read(20) 

    print(c) 

    c = f.read(20) 

    print(c) 

    f.seek(0,0) #처음으로 들어와서 다시 불러와라 

    c = f.read() 

    print(c) 

  

print() 

  

# readline : 한 줄씩 읽기 

with open('./resource/it_news.txt', 'r', encoding='UTF-8') as f: #(이파일의 별칭을 f라고 한다.) 

    # c = f.read() #파일전체를 불러와라 

    # print(c) 

    line = f.readline() 

    print(line) 

    line = f.readline() 

    print(line) 

  

print() 

  

# readlines : 전체를 읽은 후 라인 단위 리스트로 저장 

# 정말 많이 사용한다. 

with open('./resource/it_news.txt', 'r', encoding='UTF-8') as f: #(이파일의 별칭을 f라고 한다.) 

    cts = f.readlines() # [ ]로 불러오고 ,로 \n구분 

    print(cts) 

    print() 

    for c in cts :  #cts안에있는 내용을 c에 넣는다 리스트를 통해서 불러온걸 for문을 써서 원본을 불러옴 (한줄불러오고 공백으로이어준다이저\) 

        print(c, end='') #문자를 구분할떄 ''공백을 넣어준다. 

  

print() 

  

# 파일 쓰기(write) 

# 예제1 

with open('./resource/contests1.txt', 'w') as f: 

    f.write("I love python\n") 

# 예제2 

with open('./resource/contests1.txt', 'a') as f: 

    f.write("I love python2\n") 

  

#예제3 

with open('./resource/contests2.txt', 'w') as f: 

    list = ['Orange\n', 'Apple\n', 'Banana\n', 'Melon\n'] 

    f.writelines(list) 

#예제4 

with open('./resource/contests3.txt', 'w') as f: 

    print('Test Text Write!' , file=f) 

    print('Test Text Write!' , file=f) 

    print('Test Text Write!' , file=f) 